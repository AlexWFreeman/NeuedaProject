<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='2015' caption='Year' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2015-12-30#'>
        <calculation class='tableau' formula='#2015-12-30#' />
        <aliases>
          <alias key='#2015-12-30#' value='2015' />
          <alias key='#2016-12-30#' value='2016' />
          <alias key='#2017-12-30#' value='2017' />
          <alias key='#2018-12-30#' value='2018' />
          <alias key='#2019-12-30#' value='2019' />
          <alias key='#2020-12-30#' value='2020' />
          <alias key='#2021-12-30#' value='2021' />
        </aliases>
        <members>
          <member alias='2015' value='#2015-12-30#' />
          <member alias='2016' value='#2016-12-30#' />
          <member alias='2017' value='#2017-12-30#' />
          <member alias='2018' value='#2018-12-30#' />
          <member alias='2019' value='#2019-12-30#' />
          <member alias='2020' value='#2020-12-30#' />
          <member alias='2021' value='#2021-12-30#' />
        </members>
      </column>
    </datasource>
    <datasource caption='clean_data_by_day' inline='true' name='federated.1egjihz0kqfnn7129qj4r1xrpnu5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='clean_data_by_day' name='textscan.0w9hl4g0ex3lwi1f5017i0rx3ufb'>
            <connection class='textscan' directory='C:/Users/Administrator/Desktop/NeuedaProject' filename='clean_data_by_day.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0w9hl4g0ex3lwi1f5017i0rx3ufb' name='clean_data_by_day.csv' table='[clean_data_by_day#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Timestamp' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Open' ordinal='2' />
            <column datatype='real' name='High' ordinal='3' />
            <column datatype='real' name='Low' ordinal='4' />
            <column datatype='real' name='Close' ordinal='5' />
            <column datatype='real' name='Volume_(BTC)' ordinal='6' />
            <column datatype='real' name='Volume_(Currency)' ordinal='7' />
            <column datatype='real' name='Weighted_Price' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0w9hl4g0ex3lwi1f5017i0rx3ufb' name='clean_data_by_day.csv' table='[clean_data_by_day#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Timestamp' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Open' ordinal='2' />
            <column datatype='real' name='High' ordinal='3' />
            <column datatype='real' name='Low' ordinal='4' />
            <column datatype='real' name='Close' ordinal='5' />
            <column datatype='real' name='Volume_(BTC)' ordinal='6' />
            <column datatype='real' name='Volume_(Currency)' ordinal='7' />
            <column datatype='real' name='Weighted_Price' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[clean_data_by_day.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Timestamp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Timestamp]</local-name>
            <parent-name>[clean_data_by_day.csv]</parent-name>
            <remote-alias>Timestamp</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data_by_day.csv_00D4B6CBA1C44137A41E52719CC4BEEF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[clean_data_by_day.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data_by_day.csv_00D4B6CBA1C44137A41E52719CC4BEEF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Open]</local-name>
            <parent-name>[clean_data_by_day.csv]</parent-name>
            <remote-alias>Open</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data_by_day.csv_00D4B6CBA1C44137A41E52719CC4BEEF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High]</local-name>
            <parent-name>[clean_data_by_day.csv]</parent-name>
            <remote-alias>High</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data_by_day.csv_00D4B6CBA1C44137A41E52719CC4BEEF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low]</local-name>
            <parent-name>[clean_data_by_day.csv]</parent-name>
            <remote-alias>Low</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data_by_day.csv_00D4B6CBA1C44137A41E52719CC4BEEF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Close]</local-name>
            <parent-name>[clean_data_by_day.csv]</parent-name>
            <remote-alias>Close</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data_by_day.csv_00D4B6CBA1C44137A41E52719CC4BEEF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volume_(BTC)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Volume_(BTC)]</local-name>
            <parent-name>[clean_data_by_day.csv]</parent-name>
            <remote-alias>Volume_(BTC)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data_by_day.csv_00D4B6CBA1C44137A41E52719CC4BEEF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volume_(Currency)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Volume_(Currency)]</local-name>
            <parent-name>[clean_data_by_day.csv]</parent-name>
            <remote-alias>Volume_(Currency)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data_by_day.csv_00D4B6CBA1C44137A41E52719CC4BEEF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weighted_Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Weighted_Price]</local-name>
            <parent-name>[clean_data_by_day.csv]</parent-name>
            <remote-alias>Weighted_Price</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_data_by_day.csv_00D4B6CBA1C44137A41E52719CC4BEEF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='FilterByYear' datatype='boolean' name='[Calculation_1026820763599228928]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='YEAR([Date]) = YEAR([Parameters].[Parameter 1])' />
      </column>
      <column datatype='real' name='[Close]' role='measure' type='quantitative' />
      <column datatype='real' name='[High]' role='measure' type='quantitative' />
      <column datatype='real' name='[Low]' role='measure' type='quantitative' />
      <column datatype='real' name='[Open]' role='measure' type='quantitative' />
      <column caption='Volume (BTC)' datatype='real' name='[Volume_(BTC)]' role='measure' type='quantitative' />
      <column caption='Volume (Currency)' datatype='real' name='[Volume_(Currency)]' role='measure' type='quantitative' />
      <column caption='Weighted Price' datatype='real' name='[Weighted_Price]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='clean_data_by_day.csv' datatype='table' name='[__tableau_internal_object_id__].[clean_data_by_day.csv_00D4B6CBA1C44137A41E52719CC4BEEF]' role='measure' type='quantitative' />
      <column-instance column='[Close]' derivation='Avg' name='[avg:Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Open]' derivation='Avg' name='[avg:Open:qk]' pivot='key' type='quantitative' />
      <column-instance column='[High]' derivation='Max' name='[max:High:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low]' derivation='Min' name='[min:Low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Close]' derivation='Sum' name='[sum:Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[High]' derivation='Sum' name='[sum:High:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low]' derivation='Sum' name='[sum:Low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Open]' derivation='Sum' name='[sum:Open:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[avg:Close:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[avg:Open:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[max:High:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[sum:High:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[min:Low:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[sum:Low:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[sum:Close:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[sum:Open:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='2015' caption='Year' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2015-12-30#'>
          <calculation class='tableau' formula='#2015-12-30#' />
          <aliases>
            <alias key='#2015-12-30#' value='2015' />
            <alias key='#2016-12-30#' value='2016' />
            <alias key='#2017-12-30#' value='2017' />
            <alias key='#2018-12-30#' value='2018' />
            <alias key='#2019-12-30#' value='2019' />
            <alias key='#2020-12-30#' value='2020' />
            <alias key='#2021-12-30#' value='2021' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='clean_data_by_day.csv' id='clean_data_by_day.csv_00D4B6CBA1C44137A41E52719CC4BEEF'>
            <properties context=''>
              <relation connection='textscan.0w9hl4g0ex3lwi1f5017i0rx3ufb' name='clean_data_by_day.csv' table='[clean_data_by_day#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Timestamp' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='real' name='Open' ordinal='2' />
                  <column datatype='real' name='High' ordinal='3' />
                  <column datatype='real' name='Low' ordinal='4' />
                  <column datatype='real' name='Close' ordinal='5' />
                  <column datatype='real' name='Volume_(BTC)' ordinal='6' />
                  <column datatype='real' name='Volume_(Currency)' ordinal='7' />
                  <column datatype='real' name='Weighted_Price' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Closing Prices'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data_by_day' name='federated.1egjihz0kqfnn7129qj4r1xrpnu5' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2015' caption='Year' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2015-12-30#'>
              <calculation class='tableau' formula='#2015-12-30#' />
              <aliases>
                <alias key='#2015-12-30#' value='2015' />
                <alias key='#2016-12-30#' value='2016' />
                <alias key='#2017-12-30#' value='2017' />
                <alias key='#2018-12-30#' value='2018' />
                <alias key='#2019-12-30#' value='2019' />
                <alias key='#2020-12-30#' value='2020' />
                <alias key='#2021-12-30#' value='2021' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1egjihz0kqfnn7129qj4r1xrpnu5'>
            <column caption='FilterByYear' datatype='boolean' name='[Calculation_1026820763599228928]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='YEAR([Date]) = YEAR([Parameters].[Parameter 1])' />
            </column>
            <column datatype='real' name='[Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Close]' derivation='Avg' name='[avg:Close:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1026820763599228928]' derivation='None' name='[none:Calculation_1026820763599228928:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[avg:Close:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[none:Calculation_1026820763599228928:nk]'>
            <groupfilter function='member' level='[none:Calculation_1026820763599228928:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]</column>
            <column>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[none:Calculation_1026820763599228928:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[Multiple Values]</rows>
        <cols>([federated.1egjihz0kqfnn7129qj4r1xrpnu5].[mn:Date:ok] / [federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{A4DA2637-D535-4760-AC4D-0D24E12E49AF}' />
    </worksheet>
    <worksheet name='High/Low Prices'>
      <layout-options>
        <title>
          <formatted-text>
            <run>High/Low Prices&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data_by_day' name='federated.1egjihz0kqfnn7129qj4r1xrpnu5' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2015' caption='Year' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2015-12-30#'>
              <calculation class='tableau' formula='#2015-12-30#' />
              <aliases>
                <alias key='#2015-12-30#' value='2015' />
                <alias key='#2016-12-30#' value='2016' />
                <alias key='#2017-12-30#' value='2017' />
                <alias key='#2018-12-30#' value='2018' />
                <alias key='#2019-12-30#' value='2019' />
                <alias key='#2020-12-30#' value='2020' />
                <alias key='#2021-12-30#' value='2021' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1egjihz0kqfnn7129qj4r1xrpnu5'>
            <column caption='FilterByYear' datatype='boolean' name='[Calculation_1026820763599228928]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='YEAR([Date]) = YEAR([Parameters].[Parameter 1])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[High]' role='measure' type='quantitative' />
            <column datatype='real' name='[Low]' role='measure' type='quantitative' />
            <column-instance column='[High]' derivation='Max' name='[max:High:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Low]' derivation='Min' name='[min:Low:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1026820763599228928]' derivation='None' name='[none:Calculation_1026820763599228928:nk]' pivot='key' type='nominal' />
            <column-instance column='[High]' derivation='Sum' name='[sum:High:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[min:Low:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[max:High:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[min:Low:qk]&quot;</bucket>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[sum:High:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[none:Calculation_1026820763599228928:nk]'>
            <groupfilter function='member' level='[none:Calculation_1026820763599228928:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]</column>
            <column>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[none:Calculation_1026820763599228928:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[Multiple Values]</rows>
        <cols>([federated.1egjihz0kqfnn7129qj4r1xrpnu5].[mn:Date:ok] / [federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{2B0FE42F-5F98-4A48-833D-E40CE39CC54E}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C36ACBC3-928F-4342-97D1-92B0BA3FE609}' />
    </worksheet>
    <worksheet name='Stock Analysis by Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data_by_day' name='federated.1egjihz0kqfnn7129qj4r1xrpnu5' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2015' caption='Year' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2015-12-30#'>
              <calculation class='tableau' formula='#2015-12-30#' />
              <aliases>
                <alias key='#2015-12-30#' value='2015' />
                <alias key='#2016-12-30#' value='2016' />
                <alias key='#2017-12-30#' value='2017' />
                <alias key='#2018-12-30#' value='2018' />
                <alias key='#2019-12-30#' value='2019' />
                <alias key='#2020-12-30#' value='2020' />
                <alias key='#2021-12-30#' value='2021' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1egjihz0kqfnn7129qj4r1xrpnu5'>
            <column caption='FilterByYear' datatype='boolean' name='[Calculation_1026820763599228928]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='YEAR([Date]) = YEAR([Parameters].[Parameter 1])' />
            </column>
            <column datatype='real' name='[Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[High]' role='measure' type='quantitative' />
            <column datatype='real' name='[Low]' role='measure' type='quantitative' />
            <column datatype='real' name='[Open]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1026820763599228928]' derivation='None' name='[none:Calculation_1026820763599228928:nk]' pivot='key' type='nominal' />
            <column-instance column='[Close]' derivation='Sum' name='[sum:Close:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High]' derivation='Sum' name='[sum:High:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Low]' derivation='Sum' name='[sum:Low:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open]' derivation='Sum' name='[sum:Open:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[sum:Open:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[sum:Close:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[sum:Low:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[sum:High:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[sum:Open:qk]&quot;</bucket>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[sum:Close:qk]&quot;</bucket>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[sum:Low:qk]&quot;</bucket>
              <bucket>&quot;[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[sum:High:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[none:Calculation_1026820763599228928:nk]'>
            <groupfilter function='member' level='[none:Calculation_1026820763599228928:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]</column>
            <column>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[none:Calculation_1026820763599228928:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]' />
              <lod column='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.44977900385856628' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[Multiple Values]</rows>
        <cols>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{F0723EA6-8658-45C2-9DA3-25F84D1AD9F9}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{07E7FB84-8D73-4077-98AF-AFD7BE7A0BF0}' />
    </window>
    <window class='worksheet' name='Closing Prices'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]</field>
            <field>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[none:Calculation_1026820763599228928:nk]</field>
            <field>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70347BDD-7668-4427-8575-780F37A90DD2}' />
    </window>
    <window class='worksheet' name='High/Low Prices'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]</field>
            <field>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[none:Calculation_1026820763599228928:nk]</field>
            <field>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B304ED0-A503-48B0-A057-0B9016D27804}' />
    </window>
    <window class='worksheet' maximized='true' name='Stock Analysis by Year'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[:Measure Names]</field>
            <field>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[none:Calculation_1026820763599228928:nk]</field>
            <field>[federated.1egjihz0kqfnn7129qj4r1xrpnu5].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78F34913-38AF-41FA-B32D-8CC461340224}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Closing Prices' width='192'>
      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
      iURiqGIA/X6fZDJ56TVs28YwjKEWKAgCHMcZi/MZRY1RGEUfiqLged5YrEm/3x+//wcQ4tsk
      ARCxJgEQsSYBELEmARCxJgEQsSYBELEmARCxJgEQsSYBELEmARCxJgEQsSYBELEmARCxFmki
      zO23uLu0yVQxQa3pMFNOsbnb4d133+YbBoiEGEsRAhCyubVPKqnjhBrzeZMtB25OZajbIaVE
      gO/7Q78/6Khq+L4/1FujhGE4VuczDu+7OsqfzTisie9HGYoPAjy3T237gLkrFVbbDtWyyf0n
      Xd6bVtAUDU3T0PXhxoxHVUPTtKEHYsbpfIatMQqj6CMIAsIwHIs10TQtQgBUjRu3bnPj1tkv
      X702VA9CXCq5CBaxJgEQsSYBELEmARCxJgEQsSYBELEmARCxJgEQsSYBELEmARCxJgEQsSYB
      ELEmARCxJgEQsSYBELEWaaKg123joZPUQtqWQyGfxuq75LPD7aMlxGWJNBJpWV1W1repZE2S
      hQprq4/odW0W336H9IttkCjEWIl0D6ASoOtJkqkk6ysr5KoVpkoafS8kicwEP6+XcagxCvGe
      CQa6HYt0JoORUClUJrlSzvBk3+KNpIKCzAQ/r5dxqDEK8Z4JRmFu8WSX7sr04cf8N29ILsTY
      kmeBRKxJAESsSQBErEkARKxJAESsSQBErEkARKxJAESsSQBErEkARKxJAESsSQBErEkARKxJ
      AESsSQBErEUaidxYfUit5VDN6ew0HabLKbZ2O7z33XfRZZtU8RKKNBCTz2XZru/hqwYLpQRb
      vsLrV/I0ZJvUr+1lHGqMQsxHIgPqjRaqqqCFLmtNl+myydJ2l3dlm9Sv7WUcaoxCzEciVRZu
      3GLh6WfzTz9emX/e9wsx/uQiWMSaBEDEmgRAxJoEQMSaBEDE2uU/tya+VWu1Jn/6tw8iHXNz
      rszf++D6BXV0uSQAMbPb6PJnP1uOdIzVX3hlAyAPgUSsSQBErL3yD4E+W6kRhC/+/aoC37k+
      dXENibHyygfgD/7bT3E8/4W/39A1/ugPfu8COxKj1O059JxoL4rLpgxM4/Cm/8oHQLza/sf/
      ucuf/PVSpGP+zT/+iN/67iIg1wAi5iQAItYkACLWIl0DWO0GHQeyBuw2LGaqReptm6mK7JMk
      Xk6RAmA7Lju1PTq6Qn5yho31DULXI1MsktEOxwjDMMJzjucYVY3THyMefeb4cTmfYWsc1xrw
      mKMewjDE9Xz+00/+b6QaubTB7//2+4f1xmBNjo6PFADH7jM7dxWns8/ql1+SqkxQSSl4AQRK
      cDxHO4wgCIaucdSHoihE/ZGHHM6KHi3QOJzPKGocCQeYkz5ah6M+XNfnLz5ZjVRjopDiX/6D
      d87UGcZRjUFCcHRsEATR3hWiZ3XZbztMl9MUpma4MpFh68Ciahxuk6qqKrqus7nXZnW7Eamp
      q1MF5ibzI5n1VFX11ExwtLerUFDQdZ0gCI7PZxjjNhM8yJy0qhyuyVEfrh/9Rnd6XUc5E3z4
      Sy6ao59r5G1Sr732xvFn5cnDj6/ly1/5zp/fe8J//bNPIzX1z370Hf7J330r0jFCDEueBRKx
      Jv8T/BKxXY/dhhXpmJShM1FIX1BHL7/nBmB/+wndQGd2uoqmfvtv+9btO9x7vBfpmEImyc25
      iZH38mBjn2bXjnTM7YUKGdM4/vxP//YBP/nL+5Fq/N5vvsmPfu3G8efLGwf82//y55FqfO/2
      LP/uX/ww0jFx8twA/OKv/pzdusFv//N/yISZ+DZ7AmBzr81/+O8/jXTMe69N8+9//zdH3ssf
      /q/P+HR5O9Ix//Ff/ehMGDs9h9pBN1KNbs+N9P0vm//8J79ke78T6Zh//Y8+opgzR9bDcwMw
      Oz/PTv+AdEIb2T8mxGn3Hu+xslmPdIw94reIfO5F8PyNN7k+XcT2Bn9/TSHG3bkB6FtddnZ2
      MMuTZOQeQLzCzg1AY6/GF599yk//4q+wIgyTCPGyOTcA01evk0sZ5FImI3oJihBj6dyL4MdL
      d/HNMu9+9CZZeQgkXmHn3gPkiyVy6SSP7t/H8uUiWLy6zr0H0Iw0733wEb/+AyPiS8mEeLmc
      G4B8UQZcRDzIi+FErEV6MVyv28JyIJ/Safc98ukEjY5DpVy4qP6EuFDRAtDr86S2R8NQce2A
      HVNHtV1ShTxpdXRjasPWOO/vg9QYqpdwdOcz0jUZ5PiL6GNM1jXSQyDPdZibu4qiJsilEnho
      FLMGjn84ZnY8ahZGf+bo9Jja4VaaA4zuER5vw3n0J4w8Ehme2WZ1kBoA/jPnM8iWrUH4zJoM
      Mc44zNaxz45EDjLO+Gwfg44z+sHZn82wt7VII5FWp43VspmdzLHXdlksmjzZ73Lz6Ujk0Zia
      qgwwdnd6TE3X0bToNY7G7k5vk6oMMRJ5PHY3wHNhmnb2fAYbRXxmTQaooTwdZzzuawQjkdog
      I5HKV0ciBxlnPLl9jOi29uKHKVy7efv4s8LTSchbhdG//l6Ib4s8CyRiTQIgYk0CIGJNAiBi
      TQIgYk0CIGJNAiBiTQIgYk0CIGJNAiBiTQIgYk0CIGJNAiBiTQIgYk0CIGIt0kjkztYqoVFB
      6e2x0/GZKafY2O3wzlu35O1TxEsp0j1AdWYSx3JoNFskdJ2mZXOtqLPfPxl38zxvsPG/IMDz
      vOMag47dHR17VGeQkciv1BhkdO/UeYzDmhz9GWTUNDi1riP92Qyyrt5o1zVSALbW11h9vE62
      WKC5W8Nx+iw9qZM1lOMxxIHH/74yEhn9LRkV5exI5CDjjM+OVY5sdO+S1+TozyCjpl8ZiRzV
      z2aQddVHvK5RDpyavUX1yuGCTM3MoyrK4WS9XEmIl1SkAKjqSfKP/jZIioUYF/K7W8SaBEDE
      mgRAxJoEQMSaBEDEmgRAxJoEQMSaBEDEmgRAxJoEQMSaBEDEmgRAxJoEQMSaBEDEWqSXQ/e7
      LVzFJBH2OOh4VPJJdhoWczPVi+pPiAsVKQC216HZ8nD6e6hByHJLJYtP25skox5uOxkEwUC7
      Kh4fe+pjdCfHHtWJvjHoKGqM5nxCRrcmp/u6zD7OrOsgvQQjWNdTx0Z6CFQoFFAARVHRVYVQ
      UUhoKkF4UjgMw8E2o+Xs/q/D7PE7TI1n98S9rD6OmjlbZ1xqXN6ajGRdT9WJFIAnj7dotvao
      VsuE6QI3piv09Sz5hIKqqqiqiqZpA02JKYpyvLXp0cfoTmoc1WGAmeBhawBnzmN0azLA9J1y
      Mq89aI0L+9kMsCaqNtp1jfQQaHbhNWaf/j2XP/y4mC1GbkCIcSHPAolYkwCIWJMAiFiTAIhY
      kwCIWJMAiFiTAIhYkwCIWJMAiFiTAIhYkwCIWJMAiFiTAIhYkwCIWJMAiFiLNA9wZGvtIfsW
      VAsGT/Y6vPv2bQaZ1RDisg0UAMvqoZKiY/vcmEhyYIeUEsHYbAl6tBXnIPPJR9ukhmH4Sm2T
      etKXbJM68DapRzLZLN1mHd+zub/RIC/bpH6FbJN6fh8v9TapR6bnrjE9d22QQ4UYK3IRLGJN
      AiBiTQIgYk0CIGJNAiBiTQIgYk0CIGJNAiBiTQIgYk0CIGJNAiBiTQIgYk0CIGJtqACsrXzJ
      z3/+S5zoL8kWYiwMFQBfTfLGXIm2O6p2hPh2DRWAXFJjZd+hZIyqHSG+XccDMbZtRx51Sxcm
      uFWYoN+zjmtYlkVCDZgqREuFoQZYlnVcw3edyDUKKfW4xtEGatWCgeu9+HkldA3LsgjD8LiX
      QkqN3IvvOmfOxxhgTRLPrEngRV+TvKlgWdbx56HvRq6RSSpn+rBdL3KNUlbHsixc1z2+nZXS
      WuQ6jm1jWepxLyk9jFxDwzs+HyV8Opg56Hzlae12m1wud+k1Op0OmUxmoJG7I2EY0u12yWaz
      Q/UyLmsyCqPow/M8PM/DNM1L76Xdbp/cA+j6QNORZ+i6jmEM93hoVDUSicSA23keCoJgrM5n
      2BqjMMo+xmFNdF1H+/GPf/zjoaqcYts2Tx5+jmdWSBuHN74wDAhDBUVR8G2Lz+7exfc8mpZL
      LpUERSEIAhRFIQhCbMehvbvJZtuhnMvwtAhBGKIqCoQBX35+h2bPp9U8IJ/PP93cOiBEIQwC
      bMdF8Xvcub/KdLVy3N/Rv6MoChuPHrBWO6DdblEqFp5u8H12Q2nXsfjk08+5Mjtzbo3W3hb3
      llfx+m38ZAlDPTkPRTms4zgOaw/uEmYmSSW+uiZev8Odu18QuDYNG3Jm4tw1adY2qFk+pWz6
      aY3D+srTNbl391e07ZBmY//MmsBJre1HX7JvaxQy5rk1Pr/zCZan0qjvndQIguN+bNvG67W4
      /3ib6kTp1JqEh/sPhyGrD+/zZK+N1WlSyOfPrGcYBvhBSOj3+eUnX3Bldvrcdd3fWuPB6gZ2
      r4ORKaJyuJ5BGKKEJ+u6fO8zUqUpDO3wnj4MAsKnNZxOnTtfLKE4bZpBloyhPF3Pp+v6tMbx
      Q6BRaNR3WXm4hpFOk06lULw+jW4fdJP3336DVqOGHWQppzyWV9dp9X3ypsbSw3VuLEzz+dIq
      H378G3R21nBCnWI+g6ZqdDt16lbAD773XQgsVh63uL44zfLyEp3GASSLtGsPmZpb5JPPPue1
      tz6gollsNG0WpsvYnoLv99neqfO9D7+HaWisrDzi+vVFlh8+wO9btDo+iUQfLzHB/uodsrNv
      sVhU2NzZJzd9DROHXt+j3zsgU7nNzfkCqyuPmF9cpLn1gCct8HttNBW2Gi5lvcOmZfAbH9xi
      efkx6XyRpJFA9WzqVg/NyPLumzep722CUSandXm4tk2z71E0Ne4tP+G1hQr3ljf46OO/Q6P2
      GA+DQi6Npmp0Wvu0bJXvf/geBF1W1jpcvzbFg6V7dFotVDNPffMhs1cX+X93vuDDH/59OrUV
      AtUkn02hqhqd5i5dz+CjD94Bv8XKusP1axWW7n9Gp9snkcyws7HC/LVFPrnzBW9+9/uk3Dq7
      HZe5agnXA9/vs15r8ls//HUIQ1YerR6vq9Nt03M1AreOkZth/cEdKte+w1zaZbPZY6JSRVMV
      +r0+3c4BUwvvMDeZ4dHKIxYWF9lef0Cj69PvdkkkQg56Oglrk7Y2wUdvX+X+vYeUrsyh+R5a
      6LHfsTCzFd6+dZWt9ccUp+bQups8qPXp97ukdY2ltR1uzGS4v3bAD3/w0WjvAZr7uyQyBTRN
      I4VNdmKWVuOAUNHIplNkMxkerzzAUxIkzSR9q0e+VMFQQ1LZPPliiWI+RegrpMwEpVyKvpom
      tDt0+h7lQo6kmaG+u85BxyFtGgSeSyKVp5BJoiZM0tk85VIRRYHJvImaKWN1LXJJhd1Gm8lS
      CS1pEvRaPNrcJZNJk1DBDjWmKiUcN6SQz1CpTuNYXSZmrqIpIZ12h/mZEnt7u2hmiUwqQcZQ
      uL+0jJnKkjBM+v0elckpXNumXClRLE2g+zZmvoKmqiRDm/zkFZoHB4RagmzKJJfNsPJwiUBJ
      kEyl6HW6FMsVdHyyuQL5UpliziTwFJJmgnI2iZPIEfRbdJ2AUj5L0sxwUHtMw/JJmzqB62Kk
      8+TTBmoiRTqbZ6ZawnMCdCPBREYnMEu43To9D4q5DEkzx97WCm0bUoaG57qYuSK5VALdSJPJ
      FSgVcmhAKZvEyJawHB9T8dhtdpmplFANA7tzwFqtQT6bRsXHV5NMlvJ4gUI+l6UyWcV1HSYn
      J9EMk3ajyfREloP6AWa6RCqVJKm4LD18TCqTJZnQ6TkeU9Uqdt+hVC5QrlQJrDb56XmUMED1
      +0xOT7O3t4eWTJM2EhTzKe7dX0JLGCRSGfrdDuVKFcVzyJdK5Itlcimd/w+01pKlJX4zNAAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='High/Low Prices' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Stock Analysis by Year' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
